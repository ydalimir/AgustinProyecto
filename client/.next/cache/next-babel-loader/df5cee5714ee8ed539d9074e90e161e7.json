{"ast":null,"code":"var _jsxFileName = \"/home/ydalimir/Documentos/GitHub/AgustinProyecto/client/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport \"../scss/global.scss\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { useRouter } from \"next/router\";\nimport { setToken, getToken, removeToken } from \"../api/token\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthContext from \"../context/AuthContext\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: auth,\n    1: setAuth\n  } = useState(undefined);\n  const {\n    0: realoadUser,\n    1: setReloadUser\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    const token = getToken();\n\n    if (token) {\n      setAuth({\n        token,\n        idUser: jwtDecode(token).id\n      });\n    } else {\n      setAuth(null);\n    }\n\n    setReloadUser(false);\n  }, [realoadUser]);\n\n  const login = token => {\n    setToken(token);\n    setAuth({\n      token,\n      idUser: jwtDecode(token).id\n    });\n  };\n\n  const logout = () => {\n    if (auth) {\n      removeToken();\n      setAuth(null);\n      router.push(\"/\");\n    }\n  };\n\n  const authData = useMemo(() => ({\n    auth,\n    login,\n    logout,\n    setReloadUser\n  }), [auth]);\n  if (auth === undefined) return null;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authData,\n    children: [/*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      newestOnTop: true,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: false,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/ydalimir/Documentos/GitHub/AgustinProyecto/client/pages/_app.js"],"names":["React","useState","useEffect","useMemo","useRouter","setToken","getToken","removeToken","jwtDecode","AuthContext","ToastContainer","toast","MyApp","Component","pageProps","auth","setAuth","undefined","realoadUser","setReloadUser","router","token","idUser","id","login","logout","push","authData"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAO,qBAAP;AACA,OAAO,kCAAP;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,QAAgD,cAAhD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;AAIA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACtD,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBf,QAAQ,CAACgB,SAAD,CAAhC;AACA,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAA+BlB,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAMmB,MAAM,GAAGhB,SAAS,EAAxB;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,KAAK,GAAGf,QAAQ,EAAtB;;AACA,QAAIe,KAAJ,EAAW;AACTL,MAAAA,OAAO,CAAC;AACNK,QAAAA,KADM;AAENC,QAAAA,MAAM,EAAEd,SAAS,CAACa,KAAD,CAAT,CAAiBE;AAFnB,OAAD,CAAP;AAID,KALD,MAKO;AACLP,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AACDG,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAXQ,EAWN,CAACD,WAAD,CAXM,CAAT;;AAeA,QAAMM,KAAK,GAAIH,KAAD,IAAW;AACvBhB,IAAAA,QAAQ,CAACgB,KAAD,CAAR;AACAL,IAAAA,OAAO,CAAC;AACNK,MAAAA,KADM;AAENC,MAAAA,MAAM,EAAEd,SAAS,CAACa,KAAD,CAAT,CAAiBE;AAFnB,KAAD,CAAP;AAID,GAND;;AAUA,QAAME,MAAM,GAAG,MAAM;AACnB,QAAIV,IAAJ,EAAU;AACRR,MAAAA,WAAW;AACXS,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAI,MAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ;AACD;AACF,GAND;;AAUA,QAAMC,QAAQ,GAAGxB,OAAO,CACtB,OAAO;AACLY,IAAAA,IADK;AAELS,IAAAA,KAFK;AAGLC,IAAAA,MAHK;AAILN,IAAAA;AAJK,GAAP,CADsB,EAOtB,CAACJ,IAAD,CAPsB,CAAxB;AAaA,MAAIA,IAAI,KAAKE,SAAb,EAAwB,OAAO,IAAP;AAExB,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEU,QAA7B;AAAA,4BAEE,QAAC,SAAD,oBAAeb,SAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAC,WADX;AAEE,MAAA,SAAS,EAAE,IAFb;AAGE,MAAA,eAAe,MAHjB;AAIE,MAAA,WAAW,MAJb;AAKE,MAAA,YAAY,MALd;AAME,MAAA,GAAG,EAAE,KANP;AAOE,MAAA,gBAAgB,EAAE,KAPpB;AAQE,MAAA,SAAS,MARX;AASE,MAAA,YAAY;AATd;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport \"../scss/global.scss\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { useRouter } from \"next/router\";\nimport { setToken, getToken, removeToken } from \"../api/token\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthContext from \"../context/AuthContext\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\n\nexport default function MyApp({ Component, pageProps }) {\n  const [auth, setAuth] = useState(undefined);\n  const [realoadUser, setReloadUser] = useState(false);\n  const router = useRouter();\n\n\n  useEffect(() => {\n    const token = getToken();\n    if (token) {\n      setAuth({\n        token,\n        idUser: jwtDecode(token).id,\n      });\n    } else {\n      setAuth(null);\n    }\n    setReloadUser(false);\n  }, [realoadUser]);\n\n  \n\n  const login = (token) => {\n    setToken(token);\n    setAuth({\n      token,\n      idUser: jwtDecode(token).id,\n    });\n  };\n\n\n    \n  const logout = () => {\n    if (auth) {\n      removeToken();\n      setAuth(null);\n      router.push(\"/\");\n    }\n  };\n\n\n\n  const authData = useMemo(\n    () => ({\n      auth,\n      login,\n      logout,\n      setReloadUser,\n    }),\n    [auth]\n  );\n\n\n\n\n  if (auth === undefined) return null;\n\n  return (\n    <AuthContext.Provider value={authData} >\n    \n      <Component {...pageProps} />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover\n      />\n    \n  </AuthContext.Provider>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}